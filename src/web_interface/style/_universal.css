@font-face { 
    src:
        local('Libertinus Mono'), 
        url('../../assets/LibertinusMono-Regular.ttf') format('truetype');
    font-family: 'Libertinus Mono';
    font-weight: 400;
    font-style: normal;
}

:root {
    --clr-txt: #343A40;
    --clr-bkg: #F8F9FA;
}

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    background-color: var(--clr-bkg);
    font-family: 'Libertinus Mono', monospace;
}

a, button, textarea, input {
    font-family: inherit;
}

.info-msg {
    padding-top: 2rem;
    padding-inline: 1rem;
    margin-inline: auto;
    max-width: 70ch;
    font-size: 1.2rem;
    text-align: center;
}

.top-nav {
    display: flex;
    flex-wrap: wrap;
    /* gap: 1.6em; */
    max-width: 1400px;
    margin: auto;

    font-size: 1.2rem;
    padding-block: .8em;
    padding-inline: calc(2vw + .5rem);
}

.top-nav a {
    padding-inline: 0.8em;
    padding-block: .4em;
    position: relative;
    padding-left: 1.2em; /* distance from the triangle */ 
    text-decoration: none;
}

.top-nav a:hover {
    text-decoration: underline;
}

.top-nav a::before {
    --triangle-color: #939393;
}

.top-nav a[href=index]::before {
    --triangle-color: #10b981;
} 
.top-nav a[href=login]::before {
    --triangle-color: #4affc3;
} 
.top-nav a[href=create-account]::before {
    --triangle-color: #ff8725;
} 
.top-nav a[href=notifications]::before {
    --triangle-color: #3b82f6;
} 
.top-nav a[href=profile]::before {
    --triangle-color: #d359f8;
} 
.top-nav a[href=logout]::before {
    --triangle-color: #ffcc3f;
} 
.top-nav a[href=delete-account]::before {
    --triangle-color: #840000;
} 

.top-nav a::before {
    content: "";
    position: absolute;
    left: 0.4em;
    top: 50%;
    transform: translateY(-50%);
    
    width: 0;
    height: 0;
    border-top: 6px solid transparent;
    border-bottom: 6px solid transparent;
    border-left: 8px solid var(--triangle-color);

    transition: all 0.2s ease;
}

/*
 *
 *  States
 */

/* I created these states because sometimes in JS you may write e.g. 'div.style.display = "flex"',
but, by doing so, you embed CSS in the HTML ==> '<div style="display: flex"></div>',
that has higher priority compared to the CSS classes. 
And so, sometimes elements are shown/hidden and you don't understand why 
(especially if the codebase is big).
Therefore, I modify the state only via these CSS classes below. */

.block {
    display: block;
}

.flex {
    display: flex;
}

.vanish {
    animation: vanish 3s ease-in-out;
    animation-fill-mode: forwards;
}

@keyframes vanish {
      0% { display: flex; opacity: 1; }
     50% { opacity: 1; }
    100% { display: none; opacity: 0; }
}

.none {
    display: none;
}

.selected {
    background-color: rgb(255, 185, 56);
}

.hidden {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip-path: rect(0 0 0 0);
    white-space: nowrap;
    border: 0;
}

/* A couple of considerations:
1) `create-account`, `delete-account`, `login`, `logout`, `read-post`, `write-post`, `write-reply` 
have pretty much the same elements with the same positioning on the page 
and the pages themselves are really minimal. 
Neverthless, I prefer to have a separate css file for each of them 
to layout their components individually in case in the future I want to do some page-specific customization.

2) I use `@import` in the .css files instead of using `<link>` in the corresponding HTML file
because I want to keep track of the styling priorities. Same reason for why I don't use inline-styling
inside the html tags. Otherwise it can become messy and then you start relying on '!important' */
